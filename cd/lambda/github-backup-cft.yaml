AWSTemplateFormatVersion: "2010-09-09"
Description: Backup System for PieInsurance Github Org
Parameters:
  StackSourceBucketParameter:
    Type: String
    Description: (Required)
    MinLength: 1
  StackSourceFolderParameter:
    Type: String
    Description: (Required)
    MinLength: 1
  AccessLogsS3BucketParameter:
    Type: String
    Description: (Required)
    MinLength: 1
  EnvironmentTypeParameter:
    Type: String
    Default: "development"
    Description: (Required)

Resources:
##RESOURCE: ROLE
  GithubBackupSystemHandlerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AWS::StackName}-GithubBackupSystemHandler-${EnvironmentTypeParameter}"
      Description: Github Backup System Role.
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaRole
      Path: /
      Policies:
        - PolicyName: !Sub "${AWS::StackName}-GithubBackupSystemHandlerTraceExecutionPolicy-${EnvironmentTypeParameter}"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "xray:PutTraceSegments"
                  - "xray:PutTelemetryRecords"
                Resource: "*"
##RESOURCE: S3 BUCKET
  GithubBackupSystemS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub "github-backup.${EnvironmentType}.pieinsurance.com"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
##TODO: LifeCyclePolicy
      LoggingConfiguration:
        DestinationBucketName: !Sub "${AccessLogsS3BucketParameter}"
        LogFilePrefix: "github-backup"
##RESOURCE: LAMBDAS
  BackupGovernor:
    Type: "AWS::Lambda::Function"
    Properties:
      FunctionName: !Sub "${AWS::StackName}-BackupGovernor-${EnvironmentTypeParameter}"
      Description: "Backup a specific repo"
      Handler: handler
      Runtime: python3.7
      Code:
        S3Bucket: !Ref StackSourceBucketParameter
        S3Key:
          !Join [
            "/",
            [
              !Ref StackSourceFolderParameter,
              BackupGovernor.zip,
            ],
          ]
      MemorySize: 128
      Timeout: 30
      Role: !GetAtt GithubBackupSystemHandlerRole.Arn
      TracingConfig:
        Mode: Active
  BackupWorker:
    Type: "AWS::Lambda::Function"
    Properties:
      FunctionName: !Sub "${AWS::StackName}-BackupWorker-${EnvironmentTypeParameter}"
      Description: "Backup a specific repo"
      Handler: handler
      Runtime: python3.7
      Code:
        S3Bucket: !Ref StackSourceBucketParameter
        S3Key:
          !Join [
            "/",
            [
              !Ref StackSourceFolderParameter,
              BackupWorker.zip,
            ],
          ]
      MemorySize: 256
      Timeout: 120
      Role: !GetAtt GithubBackupSystemHandlerRole.Arn
      TracingConfig:
        Mode: Active
##RESOURCE: CLOUDWATCH EVENT
  GithubBackupCloudwatchEvent:
    Type: AWS::Events::Rule
    Properties: 
      Name: GithubBackupEvery16Hours
      Description: "Trigger Github Backup Every 16 hour"
      EventPattern: Json
      ScheduleExpression: cron(0 */12 * * *)
      State: ENABLED
      Targets: 
        - Arn: !Ref BackupGovernor
